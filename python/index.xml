<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Cours info TSI</title>
    <link>https://info-tsi-vieljeux.github.io/python/</link>
    <description>Recent content in Python on Cours info TSI</description>
    <generator>Hugo</generator>
    <language>fr</language>
    <lastBuildDate>Sat, 06 Mar 2021 14:23:56 +0100</lastBuildDate>
    <atom:link href="https://info-tsi-vieljeux.github.io/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Traits généraux</title>
      <link>https://info-tsi-vieljeux.github.io/python/traitsgaux/</link>
      <pubDate>Sat, 06 Mar 2021 14:23:56 +0100</pubDate>
      <guid>https://info-tsi-vieljeux.github.io/python/traitsgaux/</guid>
      <description>&lt;h1 id=&#34;traits-généraux&#34;&gt;Traits généraux&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;h3 id=&#34;shell-et-ide&#34;&gt;Shell et IDE&lt;/h3&gt;&#xA;&lt;p&gt;Python est un langage de programmation interprété développé par Guido van Rossum en 1989. Langage impératif de haut-niveau doté d&amp;rsquo;une syntaxe simple, Python s&amp;rsquo;adapte à de nombreux contextes grâce à sa modularité ; une importante librairie de modules et packages permet en effet d&amp;rsquo;étendre ses capacités.&lt;/p&gt;&#xA;&lt;p&gt;Python possède son propre shell (interface en ligne de commande) : l&amp;rsquo;utilisateur entre une commande Python qui est interprétée immédiatement lorsque &lt;code&gt;Entrée&lt;/code&gt; est tapée.&lt;br&gt;&#xA;Au lancement, le shell Python, poli, se présente :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Types de base</title>
      <link>https://info-tsi-vieljeux.github.io/python/typesbase/</link>
      <pubDate>Sat, 06 Mar 2021 14:23:56 +0100</pubDate>
      <guid>https://info-tsi-vieljeux.github.io/python/typesbase/</guid>
      <description>&lt;h1 id=&#34;types-de-base&#34;&gt;Types de base&lt;/h1&gt;&#xA;&lt;p&gt;Les types de base en python (les catégories fondamentales des objets manipulés) sont :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Les &lt;strong&gt;entiers&lt;/strong&gt; &lt;code&gt;int&lt;/code&gt; (en anglais, &lt;em&gt;entier&lt;/em&gt; se dit &lt;em&gt;integer&lt;/em&gt;).&lt;br&gt;&#xA;Exemples : 1, 2, 1012, -18 etc.&#xA;&#xA;&lt;div class=&#34;notices note&#34; &gt;&lt;p&gt;Leur précision est infinie et leur taille est illimitée en Python.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Les &lt;strong&gt;flottants&lt;/strong&gt; &lt;code&gt;float&lt;/code&gt;. Ce sont des approximations de nombres réels. La méthode d&amp;rsquo;écriture en machine de ces nombres, équivalente à une écriture scientifique pour nombre binaire, explique leur nom : ce sont des nombres à virgule flottante.&lt;br&gt;&#xA;Exemples : 3.58, -0.0398, 2e-7, 3e4 (les puissances de dix, notés &lt;code&gt;e&lt;/code&gt; ou &lt;code&gt;E&lt;/code&gt; renvoient toujours des nombres flottants).&#xA;&#xA;&lt;div class=&#34;notices info&#34; &gt;&lt;p&gt;&lt;strong&gt;Leur précision est limitée&lt;/strong&gt; à 53 bits, soit &lt;strong&gt;environ 16 chiffres significatifs en décimal&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Types structurés</title>
      <link>https://info-tsi-vieljeux.github.io/python/typesstruct/</link>
      <pubDate>Sat, 06 Mar 2021 14:23:56 +0100</pubDate>
      <guid>https://info-tsi-vieljeux.github.io/python/typesstruct/</guid>
      <description>&lt;h1 id=&#34;types-structurés&#34;&gt;Types structurés&lt;/h1&gt;&#xA;&lt;p&gt;Les types structurés (chaînes, tuiles, listes, dictionnaires, ensembles) sont des objets composés ; ils contiennent eux-mêmes d&amp;rsquo;autres objets.&lt;/p&gt;&#xA;&lt;p&gt;Certains de ces objets composites sont en plus indicés. Comme leur nom l&amp;rsquo;indique, on peut parcourir les éléments présents d&amp;rsquo;une &lt;strong&gt;structure indicée&lt;/strong&gt; à l&amp;rsquo;aide d&amp;rsquo;un indice (un nombre entier étiquetant l&amp;rsquo;indice). Les structures indicés sont donc ordonnées, ce sont des &lt;strong&gt;séquences&lt;/strong&gt;.&#xA;&#xA;&lt;div class=&#34;notices warning&#34; &gt;&lt;p&gt;&lt;strong&gt;L&amp;rsquo;indice commence toujours à 0&lt;/strong&gt;.&lt;br&gt;&#xA;Et donc si la structure contient n éléments, le dernier indice est n-1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Strucutres de contrôle</title>
      <link>https://info-tsi-vieljeux.github.io/python/structcontr/</link>
      <pubDate>Sat, 06 Mar 2021 14:23:56 +0100</pubDate>
      <guid>https://info-tsi-vieljeux.github.io/python/structcontr/</guid>
      <description>&lt;h1 id=&#34;structures-de-contrôle&#34;&gt;Structures de contrôle&lt;/h1&gt;&#xA;&lt;h2 id=&#34;instruction-daffectation&#34;&gt;Instruction d&amp;rsquo;affectation&lt;/h2&gt;&#xA;&lt;h3 id=&#34;définition&#34;&gt;Définition&lt;/h3&gt;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;un objet est créé dans un programme Python, une certaine place en mémoire lui est allouée. Cette place est repérée par une adresse dont la valeur peut être obtenue grâce à la fonction &lt;code&gt;id()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;id(&lt;span style=&#34;color:#ae81ff&#34;&gt;3.7&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;4387417928&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Il est beaucoup plus pratique de pouvoir récupérer une valeur en mémoire grâce à un petit nom plutôt que par son adresse. C&amp;rsquo;est à ça que servent les variables. Une variable est liée à un objet grâce à une &lt;strong&gt;affectation&lt;/strong&gt; et identifie cet objet pour les calculs suivants. Une affectation est une instruction (pas de retour).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Divers</title>
      <link>https://info-tsi-vieljeux.github.io/python/divers/</link>
      <pubDate>Sat, 06 Mar 2021 14:23:56 +0100</pubDate>
      <guid>https://info-tsi-vieljeux.github.io/python/divers/</guid>
      <description>&lt;h1 id=&#34;divers&#34;&gt;Divers&lt;/h1&gt;&#xA;&lt;h2 id=&#34;commentaires&#34;&gt;Commentaires&lt;/h2&gt;&#xA;&lt;p&gt;Tous les langages de programmations permettent d&amp;rsquo;introduire des commentaires dans le code qui servent d&amp;rsquo;aides et de repères à celui qui lit le code, mais qui sont ignorés lors de l&amp;rsquo;exécution.&lt;/p&gt;&#xA;&lt;p&gt;En Python, les commentaires sont introduits par le symbole dièse (hashtag) &lt;code&gt;#&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt; &#xA; &lt;/p&gt;&#xA;&lt;h2 id=&#34;utilisation-de-print&#34;&gt;Utilisation de print&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;print&lt;/code&gt; est la première fonction native que l&amp;rsquo;on rencontre. C&amp;rsquo;est une fonction à effet de bord :  elle ne retourne rien (elle est de type &lt;code&gt;None&lt;/code&gt;), mais elle permet d&amp;rsquo;afficher une chaîne de caractères, ou le contenu d&amp;rsquo;une variable, quel que soit son type.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
